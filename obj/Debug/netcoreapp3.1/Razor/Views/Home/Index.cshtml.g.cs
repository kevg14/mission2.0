#pragma checksum "/Users/kevingutierrez/Projects/MyFirstASPNETWebApp/Views/Home/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e4439632c4968fda5593c7cd25df488640df991c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(MyFirstASPNETWebApp.Views.Home.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace MyFirstASPNETWebApp.Views.Home
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 3 "/Users/kevingutierrez/Projects/MyFirstASPNETWebApp/Views/_ViewImports.cshtml"
using MyFirstASPNETWebApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e4439632c4968fda5593c7cd25df488640df991c", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"462d0a62ada4c3b4effe12261ac022dd5feb736f", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "/Users/kevingutierrez/Projects/MyFirstASPNETWebApp/Views/Home/Index.cshtml"
  
    ViewData["Title"] = "Mission 3";
    ViewData["Header"] = "Welcome to the Site for IS 413 By Kevin Gutierrez!";


#line default
#line hidden
#nullable disable
            WriteLiteral(@"



    
    <!--- <img id=""picKev"" src=""../img/skikev.jpg"" /> -->
    <img width=""200"" id=""picKev"" src=""../img/utahski.png"" />

    <p>
        These are the learning objectives for the class: <br />
        1. Create web apps using the .NET MVC Framework. <br />
        2. Write Razor pages using the fundamentals of C#. <br />
        3. Use libraries such as Bootstrap, JQuery, Angular etc. in the web apps. <br />
        4. Set up connection strings to connect database(es) and interact with data.
        5. Interact with APIs as needed to attain desired results. <br />
        6. Use basic security measures to protect code from malicious attacks. <br />
        7. Work as a team to build and integrate a web app. <br />
        8. Have the tools necessary to complete the ASP.NET Core MVC components of INTEX. <br />
        9. Increase confidence in ability to “figure things out” on one’s own. <br />
        I basically hope to gain all the skills stated above that Professor Hilton wants to impart with us.
 ");
            WriteLiteral("   </p>\n    <br />\n    <p>Jobs I want to work:</p>\n    <ul>\n        <li>1: Data Analyst</li>\n        <li>2: Software Programmer</li>\n        <li>3: Business Consultant</li>\n        <li>4: Web Developer</li>\n    </ul>\n    \n\n");
            WriteLiteral("\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
